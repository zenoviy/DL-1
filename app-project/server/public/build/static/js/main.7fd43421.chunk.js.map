{"version":3,"sources":["business/requestServices.js","logo.svg","components/homeComponent/HomePage.jsx","components/aboutComponent/AboutPage.jsx","components/shopComponent/shopProvider.js","business/pageServices.js","components/shopComponent/ShopPage.jsx","components/shopComponent/shopSidePanel/shopSidePanel.jsx","components/shopComponent/shopSingleComponent/ShopSinglePage.jsx","components/usersComponent/userProvider.js","components/usersComponent/UsersPage.jsx","components/notFoundComponent/NotFoundPage.js","components/footerComponent/FooterPart.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","getServerData","url","fetch","then","data","json","catch","err","console","error","postServerData","headers","body","method","credentials","deleteServerData","HomePageComponent","props","className","localState","name","AppDescription","value","state","clicks","price","isTogled","displayText","handleClick","bind","priceIncrease","priceDecrise","toggleColors","inpuText","event","this","setState","target","log","toggleState","increaseValue","newPrice","changeComponentState","key","clickNumber","Fragment","onClick","React","Component","ToggleElement","porps","onChange","type","TextComponent","placeholder","AboutPageComponent","ShopStateContext","createContext","ShopProvider","useState","shopData","shopState","setShopState","useEffect","appData","HOST","Provider","children","formatImage","image","host","regex","RegExp","match","linkNameCreator","replace","replaceAll","split","map","character","toLowerCase","join","ShopPageComponent","useContext","marketData","ShopInnerComponent","shopProduct","allCard","dataBody","productItem","index","ShopCard","currentProduct","currentId","stata","id","useRouteMatch","path","formatedPrice","Intl","NumberFormat","style","currency","format","to","pathname","query","src","alt","ShopSidePanelComponent","productId","targetId","allSideCards","allProducts","product","CreateSidePanelCard","currentItem","curentProduct","ShopSinglePageComponent","location","useLocation","linkRout","useParams","productIndex","search","serchParams","URLSearchParams","searchObjects","entries","val","convertSearchToObject","allProduct","SinglePageInner","currentGalleryImage","clickOnGallery","selectPicture","picture","currentImage","targetProduct","searchProductId","find","productData","searchCurrentProduct","title","detailDescription","shortDescription","allProductPictures","pic","i","UsersStateContext","UserProvider","usersData","users","setUsers","UsersPageComponent","UserForm","userData","DisplayUsers","allUsers","onSubmit","e","preventDefault","targetForm","formObject","targetItem","userPostLink","JSON","stringify","createUser","reset","htmlFor","required","allUserCard","item","nickName","userId","deleteUser","NotFound","FooterPageComponent","BaseRouter","exact","activeClassName","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.7fd43421.chunk.js","sourcesContent":["function getServerData(url){\r\n    return fetch(url)\r\n    .then(data => data.json())\r\n    .then(data => data)\r\n    .catch(err => \r\n        console.error(err))\r\n}\r\n\r\nfunction postServerData(url, headers, body){\r\n    return fetch(url, {\r\n        method: \"post\",\r\n        credentials: \"same-origin\",\r\n        headers: headers ? headers : {\"Content-Type\": \"application/x-www-form-urlencoded\"},\r\n        body: body? body: null\r\n    })\r\n    .then(data => data.json())\r\n    .catch(err => \r\n        console.error(err))\r\n}\r\nfunction deleteServerData(url, headers){\r\n    return fetch(url, {\r\n        method: \"delete\",\r\n        headers: headers,\r\n    }).then(data => data.json())\r\n}\r\n\r\n\r\n\r\n\r\nmodule.exports = {\r\n    getServerData,\r\n    postServerData,\r\n    deleteServerData\r\n}","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from \"react\";\r\nimport \"./home-style.css\";\r\n\r\nexport function HomePageComponent(props) {\r\n    const appLocalState = {\r\n        name: \"App Home Object\"\r\n    }\r\n    return(\r\n        <div className=\"container page-body\">\r\n            <h1>Home Page</h1>\r\n            <AppDescription localState={appLocalState} />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport class AppDescription extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.localState = props.localState? props.localState : props.value;\r\n        this.state = {\r\n            clicks: 0,\r\n            price: 1,\r\n            isTogled: false,\r\n            displayText: \"\",\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.priceIncrease = this.priceIncrease.bind(this);\r\n        this.priceDecrise = this.priceDecrise.bind(this);\r\n        this.toggleColors = this.toggleColors.bind(this);\r\n        this.inpuText = this.inpuText.bind(this);\r\n    }\r\n    inpuText(event){\r\n        this.setState({\r\n            displayText: event.target.value\r\n        })\r\n    }\r\n    toggleColors(){\r\n        console.log(\"togle\")\r\n        let toggleState = !this.state.isTogled;\r\n        this.setState({\r\n            isTogled: toggleState\r\n        })\r\n    }\r\n    priceIncrease(increaseValue){\r\n        let newPrice = this.state.price + increaseValue;\r\n        this.changeComponentState(\"price\", newPrice)\r\n    }\r\n    priceDecrise(increaseValue){\r\n        let newPrice = this.state.price - increaseValue;\r\n        this.changeComponentState(\"price\", newPrice)\r\n    }\r\n    handleClick(event){\r\n        let clicks = this.state.clicks + 1;\r\n        this.setState({\r\n            clicks: clicks\r\n        })\r\n    }\r\n    changeComponentState(key, value){\r\n        this.setState(\r\n        {\r\n            [key] : value\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const localState = this.localState;\r\n        const clickNumber = this.state.clicks;\r\n        const price = this.state.price;\r\n        const isTogled = this.state.isTogled;\r\n        return(\r\n            <React.Fragment>\r\n                <hr></hr>\r\n                <p>App Description text</p>\r\n                <i>{ localState ? localState.name : \"\"}</i>\r\n\r\n                <h4>{clickNumber}</h4>\r\n                <h4>Price: {price}</h4>\r\n                <button onClick={this.handleClick}>Click</button>\r\n\r\n                <button onClick={() => { this.priceIncrease(3) } }>+</button>\r\n                <button onClick={() => { this.priceDecrise(3) } }>-</button>\r\n\r\n                <div className={isTogled ? \"toggle-squere red-square\" : \"toggle-squere\"}></div>\r\n                <div className={isTogled ? \"toggle-squere\" : \"toggle-squere blue-square\"}></div>\r\n                <ToggleElement \r\n                    toggleColors={this.toggleColors} \r\n                    isTogled={isTogled}\r\n                    inpuText={this.inpuText}\r\n                    displayText={this.state.displayText}\r\n                > </ToggleElement>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nclass ToggleElement extends React.Component {\r\n    constructor(porps){\r\n        super(porps)\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div className= {this.props.isTogled ? \"toggle-squere red-square\" : \"toggle-squere yellow-square\"}></div>\r\n                <input onChange={() => { this.props.toggleColors() }} type=\"checkbox\" />\r\n                <TextComponent inpuText={this.props.inpuText} displayText={this.props.displayText}></TextComponent>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport function TextComponent(props){\r\n    return(\r\n        <div>\r\n            <h4>{props.displayText}</h4>\r\n            <input onChange={((event) => { props.inpuText(event)})} type=\"text\" placeholder=\"enter You text message\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\n\r\n\r\nexport function AboutPageComponent(props) {\r\n    return(\r\n        <div className=\"container page-body\">\r\n            <h1>About Page</h1>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { getServerData } from \"../../business/requestServices\";\r\n\r\n\r\nexport const ShopStateContext = React.createContext();\r\nexport function ShopProvider(props){\r\n    const [shopState, setShopState] = useState({\r\n        shopData: []\r\n    });\r\n    useEffect(() => {\r\n        let url = props.appData.HOST + \"get-product\";\r\n        let shopServerData = getServerData(url);\r\n\r\n        shopServerData.then((data) => {\r\n            //console.log(data, \"Data\")\r\n            setShopState({\r\n                shopData: data ? data : []\r\n            })\r\n        })\r\n    }, [])\r\n    return(\r\n        <ShopStateContext.Provider value={[shopState, setShopState]}>\r\n            { props.children }\r\n        </ShopStateContext.Provider>\r\n    )\r\n}\r\n\r\nexport function formatImage(image, host){\r\n    let regex = new RegExp(\"^(http|https)://\");\r\n    let res = image.match(regex);\r\n    return res? image : host + image;\r\n}","export function linkNameCreator (name) {\r\n    const regex = new RegExp(/\\s\\W\\w/g);\r\n    return name.replace(regex, \"-\").replaceAll(\"/\", \"-\").split(\" \").map(character => character.toLowerCase()).join(\"\");\r\n}\r\n\r\n\r\nexport function convertSearchToObject(search){\r\n    let serchParams = new URLSearchParams(search);\r\n    let searchObjects = {};\r\n    for(let [key, val] of serchParams.entries()){\r\n        searchObjects[key] = val;\r\n    }\r\n    return searchObjects\r\n}","import React, { useContext } from \"react\";\r\nimport { ShopStateContext } from \"./shopProvider\";\r\nimport { Link, useRouteMatch } from \"react-router-dom\";\r\nimport { linkNameCreator } from \"../../business/pageServices\";\r\nimport { formatImage } from \"./shopProvider\";\r\nimport \"./style.css\";\r\n\r\nexport function ShopPageComponent(props) {\r\n    const [shopState, setShopState] = useContext(ShopStateContext);\r\n    let appData = props.appData;\r\n    const host = appData.HOST;\r\n    console.log(shopState, host, \"<Host\")\r\n    return(\r\n        <div className=\"container page-body\">\r\n            <h1>Shop Page</h1>\r\n            <ShopInnerComponent marketData={shopState.shopData} setShopState={setShopState} host={host}></ShopInnerComponent>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nclass ShopInnerComponent extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            shopProduct: []\r\n        }\r\n    }\r\n    // Lifecycle in React\r\n    static getDerivedStateFromProps(props, stata){\r\n        console.log(\"getDerivedStateFromProps\")\r\n        return { shopProduct: props.marketData ?  props.marketData : [] }\r\n    }\r\n    componentDidMount(){\r\n        console.log(\"componentDidMount\")\r\n    }\r\n    componentWillMount(){\r\n        console.log(\"componentWillMount\")\r\n    }\r\n    componentWillUpdate(){\r\n        console.log(\"componentWillUpdate\")\r\n    }\r\n    componentWillUnmount(){\r\n        console.log(\"componentWillUnmount\")\r\n    }\r\n    componentDidUpdate(){\r\n        console.log(\"componentDidUpdate\")\r\n    }\r\n    componentDidCatch(){\r\n        console.log(\"componentDidCatch\")\r\n    }\r\n    \r\n\r\n    render(){\r\n        let host = this.props.host;\r\n        const marketData = this.props.marketData.dataBody? this.props.marketData.dataBody : [];\r\n        let allCard = marketData.map((productItem, index) => {\r\n            return(<ShopCard key={index} currentProduct={productItem} currentId={index} host={host}></ShopCard>)\r\n        })  \r\n        return(\r\n            <React.Fragment>\r\n                <ul className=\"shop-card-wrapper\">\r\n                    {allCard? allCard : 'Loading...'}\r\n                </ul>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction ShopCard(props){\r\n    const {\r\n        id,\r\n        name,\r\n        price,\r\n        image\r\n    } = props.currentProduct;\r\n    const host = props.host;\r\n    let { path, url} = useRouteMatch();\r\n    console.log(path, url)\r\n    let formatedPrice = new Intl.NumberFormat(\"us-US\", {style: 'currency', currency: \"USD\"}).format(price);\r\n    return(\r\n        <li className=\"single-card\">\r\n            <Link to={{\r\n                pathname: `${url}/${linkNameCreator(name)}?id=${id}`,\r\n                query: { id: id }\r\n            }}>\r\n             <div className=\"card-inner\">\r\n                 <img src={formatImage(image[0], host)} alt={name} />\r\n                <h3>{name}</h3>\r\n                <h4>{formatedPrice}</h4>\r\n             </div>\r\n            </Link>\r\n        </li> \r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { convertSearchToObject, linkNameCreator } from \"../../../business/pageServices\";\r\nimport { formatImage } from \"../shopProvider\";\r\nimport \"./style.css\";\r\n\r\n\r\nexport function ShopSidePanelComponent(props){\r\n    const productId = props.targetId;\r\n    const host = props.host;\r\n    let allProducts = props.allProducts || [];\r\n    let allSideCards = allProducts.map(product => {\r\n        return(\r\n            <li key={product.id} className={ productId == product.id ? \"side-panell-inner selected-card\" : \"side-panell-inner\"}>\r\n                <CreateSidePanelCard host={host} currentItem={product} productId={productId}></CreateSidePanelCard>\r\n            </li> \r\n        )\r\n    })\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"side-panell-wrapper\">\r\n                <h3>Other Product</h3>\r\n                <ul className=\"side-panel-card-body\">\r\n                    {allSideCards ? allSideCards : \"\"}\r\n                </ul>\r\n            </div>\r\n            \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction CreateSidePanelCard(props) {\r\n    const curentProduct = props.currentItem;\r\n    const host = props.host;\r\n    const {\r\n        id,\r\n        name,\r\n        image,\r\n        price\r\n    } = curentProduct;\r\n\r\n    let formatedPrice = new Intl.NumberFormat(\"us-US\", {style: 'currency', currency: \"USD\"}).format(price);\r\n    return(\r\n        <React.Fragment>\r\n            <NavLink to={{\r\n                pathname : linkNameCreator(name) + `?id=${id}`,\r\n                query: {id: id}\r\n            }}>\r\n                <div >\r\n                    <div>\r\n                        <img src={image? formatImage(image[0], host) : \"\"}/>\r\n                    </div>\r\n                    <h4>{name}</h4>\r\n                    <h5>{formatedPrice}</h5>\r\n                </div>\r\n            </NavLink>\r\n            \r\n            \r\n        </React.Fragment>\r\n    )\r\n}","import React, { useContext } from \"react\";\r\nimport { useLocation, useParams, useRouteMatch } from \"react-router-dom\";\r\nimport { ShopSidePanelComponent } from \"../shopSidePanel/shopSidePanel\";\r\nimport { convertSearchToObject } from \"../../../business/pageServices\";\r\nimport { ShopStateContext, formatImage } from \"../shopProvider\";\r\nimport \"./style.css\";\r\n\r\n\r\nexport function ShopSinglePageComponent(props){\r\n    const [shopState, setShopState] = useContext(ShopStateContext);\r\n\r\n    let location = useLocation();\r\n    let linkRout = useParams();\r\n    let {path, url} = useRouteMatch();\r\n    const host = props.appData.HOST;\r\n\r\n    const productIndex = location.query ? location.query.id : convertSearchToObject(location.search).id;\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"container\">\r\n                <h1>{linkRout.name ? linkRout.name : \"\"}</h1>\r\n                <div className=\"product-main-body\">\r\n                    <SinglePageInner host={host} allProduct={shopState.shopData.dataBody} targetId={productIndex}></SinglePageInner>\r\n                    <ShopSidePanelComponent host={host} allProducts={shopState.shopData.dataBody} targetId={productIndex}></ShopSidePanelComponent>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nfunction searchCurrentProduct(allProduct, searchProductId){\r\n    if(!allProduct) return\r\n    return allProduct.find(productData => productData.id == searchProductId)\r\n}\r\n\r\n\r\nclass SinglePageInner extends React.Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            currentId: this.props.targetId,\r\n            currentGalleryImage: \"\"\r\n        }\r\n        this.clickOnGallery = this.selectPicture.bind(this);\r\n    }\r\n    selectPicture(picture){\r\n        \r\n        let currentImage = picture;\r\n        console.log(picture)\r\n        this.setState({\r\n            currentGalleryImage: currentImage\r\n        })\r\n    }\r\n    componentWillReceiveProps(){\r\n        console.log(\"unmount\")\r\n        this.setState({\r\n            currentGalleryImage: \"\"\r\n        })/**/\r\n    }\r\n    render(){\r\n        let targetProduct = searchCurrentProduct(this.props.allProduct, this.props.targetId) || [];\r\n        const host = this.props.host;\r\n        //console.log(\"single-panell reload\", targetProduct)\r\n        let {\r\n            id,\r\n            name,\r\n            title,\r\n            image,\r\n            detailDescription,\r\n            price,\r\n            shortDescription\r\n        } = targetProduct;\r\n        let formatedPrice = new Intl.NumberFormat(\"us-US\", {style: 'currency', currency: \"USD\"}).format(price) || \"\";\r\n        let allProductPictures = image ? image.map((pic, i)=> {\r\n            return( <img onClick={() => this.clickOnGallery(pic)} key={i} \r\n            className={this.state.currentGalleryImage === pic || !this.state.currentGalleryImage && i === 0? \"prod-galery-img selected-picture\" : \"prod-galery-img\"} \r\n            src={formatImage(pic, host)} />)\r\n        }) : \"\";\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"product-description-inner\">\r\n                    <div className=\"media-area\">\r\n                        <img src={image? formatImage(this.state.currentGalleryImage || image[0], host) : \"\"} />\r\n                        <div className=\"product-gallery\">\r\n                            {allProductPictures}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"product-description\">\r\n\r\n                        <h1>{name ? name : \"\"}</h1>\r\n                        <h2>{title ? title : \"\"}</h2>\r\n                        <p>{shortDescription ? shortDescription : \"\"}</p>\r\n                        <h3>{price ? \"Price: \" + formatedPrice : \"\"}</h3>  \r\n                        <p>{detailDescription ? detailDescription : \"\"}</p>\r\n                    </div>\r\n                </div>\r\n                \r\n                \r\n            </React.Fragment>\r\n        )\r\n    }\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { getServerData, postUserData } from \"../../business/requestServices\";\r\n\r\n\r\nexport const UsersStateContext = React.createContext();\r\nexport function UserProvider(props){\r\n    const [users, setUsers] = useState({\r\n        usersData: []\r\n    });\r\n    useEffect(() => {\r\n        let url = props.appData.HOST + \"app-user-work\";\r\n        let userServerData = getServerData(url);\r\n\r\n        userServerData.then((data) => {\r\n            setUsers({\r\n                usersData: data ? data : []\r\n            })\r\n        })\r\n    }, [])\r\n    return(\r\n        <UsersStateContext.Provider value={[users, setUsers]}>\r\n            { props.children }\r\n        </UsersStateContext.Provider>\r\n    )\r\n}\r\n\r\n","import React, { useContext } from \"react\";\r\nimport { UsersStateContext } from \"./userProvider\";\r\nimport { postServerData, deleteServerData } from \"../../business/requestServices\";\r\nimport \"./style.css\";\r\n\r\n\r\nexport function UsersPageComponent(props) {\r\n    const [users, setUsers] = useContext(UsersStateContext);\r\n    return(\r\n        <div className=\"container page-body\">\r\n            <h1>Users Page</h1>\r\n            <div className=\"user-screen-container\">\r\n                <UserForm userData={ users.usersData } setUsers={ setUsers } appData={ props.appData }></UserForm>\r\n                <DisplayUsers allUsers={users.usersData} setUsers={ setUsers } appData={ props.appData }></DisplayUsers>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nfunction UserForm(props) {\r\n    return(\r\n        <React.Fragment>\r\n            <form className=\"user-form\" onSubmit={(e) => { \r\n                e.preventDefault(); \r\n                createUser(e.target, props.setUsers, props.appData);\r\n                e.target.reset();\r\n            }}>\r\n                <label htmlFor=\"userName\">\r\n                    <p>* Enter you name</p>\r\n                    <input id=\"userName\" name=\"userName\" type=\"text\" placeholder=\"Enter you name\" required />\r\n                </label>\r\n                <label htmlFor=\"nickName\">\r\n                    <p>* Enter you nick name</p>\r\n                    <input id=\"nickName\" name=\"nickName\" type=\"text\" placeholder=\"Enter you nick name\" required />\r\n                </label>\r\n                <label htmlFor=\"userMail\">\r\n                    <p>* Enter you email</p>\r\n                    <input id=\"userMail\" name=\"userMail\" type=\"mail\" placeholder=\"Enter you email\" required />\r\n                </label>\r\n                <label htmlFor=\"userPassword\">\r\n                    <p>* Enter you password</p>\r\n                    <input id=\"userPassword\" name=\"userPassword\" type=\"password\" placeholder=\"Enter you password\" required />\r\n                </label>\r\n                <br></br>\r\n                <input type=\"submit\" value=\"Create user\" />\r\n            </form>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n//.dataBody\r\nfunction DisplayUsers(props){\r\n    let users = props.allUsers;\r\n    if(!users || !users.dataBody) return false\r\n    console.log(users.dataBody)\r\n    const allUserCard = users.dataBody.map(item =>{\r\n        return(\r\n            <li key={item.id}>\r\n                <p>Nick Name: {item.nickName}\r\n                    <button onClick={() => deleteUser(item.id, props.setUsers, props.appData) }>X</button>\r\n                </p>\r\n                \r\n            </li>\r\n        )\r\n    })\r\n    return(\r\n        <React.Fragment>\r\n            <ul>{allUserCard ? allUserCard : \"\"}</ul>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\n\r\nfunction deleteUser(userId, setUsers, appData){\r\n    const headers = {\r\n        'Content-Type' : 'application/json',\r\n        'selecteduserid' : userId\r\n    }\r\n    let userPostLink = appData.HOST + \"app-user-work\";\r\n    let serverUserRequest = deleteServerData(userPostLink)\r\n    serverUserRequest.then(data => {\r\n        console.log(data)\r\n        setUsers({\r\n            usersData: data\r\n        })\r\n    })\r\n}\r\n\r\n\r\nfunction createUser(targetForm, setUsers, appData){ \r\n    let formObject = {};\r\n    for(let targetItem of targetForm){\r\n        if(targetItem.name && targetItem.value){\r\n            formObject[targetItem.name] = targetItem.value;\r\n        }\r\n    }\r\n    let userPostLink = appData.HOST + \"app-user-work\";\r\n    let serverUserRequest = postServerData(userPostLink, {\"Content-Type\" : \"application/json\"}, JSON.stringify(formObject));\r\n    \r\n    serverUserRequest.then(data => {\r\n        if(!data.dataBody) return false\r\n\r\n        console.log(data.dataBody, setUsers)\r\n        setUsers({\r\n            usersData: data\r\n        })\r\n    }) \r\n}","import React from \"react\";\r\n\r\n\r\nexport function NotFound(){\r\n    return(\r\n        <div className=\"container page-body\">\r\n            <h2>Not Found 404</h2>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nexport function FooterPageComponent(props) {\r\n    return(\r\n        <React.Fragment>\r\n            <div className=\"app-footer page-body\">\r\n                <div className=\"container\">\r\n                    <h4>Footer</h4>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\";\n\nimport { HomePageComponent, AppDescription } from \"./components/homeComponent/HomePage\";\nimport { AboutPageComponent } from \"./components/aboutComponent/AboutPage\";\nimport { ShopPageComponent } from \"./components/shopComponent/ShopPage\";\nimport { ShopSinglePageComponent } from \"./components/shopComponent/shopSingleComponent/ShopSinglePage\";\nimport { UsersPageComponent } from \"./components/usersComponent/UsersPage\";\nimport { NotFound } from \"./components/notFoundComponent/NotFoundPage\";\nimport { FooterPageComponent } from \"./components/footerComponent/FooterPart\";\n\nimport { ShopProvider } from \"./components/shopComponent/shopProvider\";\nimport { UserProvider } from \"./components/usersComponent/userProvider\";\n\n\nfunction BaseRouter(props){\n  return(\n    <Router>\n      <div className=\"app-menu\">\n        <nav className=\"menu-body container\">\n          <ul>\n            <li>\n              <NavLink exact to=\"/\" activeClassName=\"selected\">Home</NavLink>\n            </li>\n            <li>\n              <NavLink exact to=\"/about-page\" activeClassName=\"selected\">About</NavLink>\n            </li>\n            <li>\n              <NavLink  to=\"/shop-page\" activeClassName=\"selected\">Shop</NavLink>\n            </li>\n            <li>\n              <NavLink exact to=\"/users-page\" activeClassName=\"selected\">Users</NavLink>\n            </li>\n          </ul>\n        </nav>\n      </div>\n      <Switch>\n        <Route exact path=\"/\">\n          <HomePageComponent></HomePageComponent>\n        </Route>\n        <Route exact path=\"/about-page\">\n          <AboutPageComponent></AboutPageComponent>\n        </Route>\n        <Route exact path=\"/users-page\">\n          <UserProvider appData={props.appData}>\n            <UsersPageComponent appData={props.appData}></UsersPageComponent>\n          </UserProvider>\n        </Route>\n        <Route exact path=\"/shop-page/:name\">\n          <ShopProvider appData={props.appData}>\n            <ShopSinglePageComponent appData={props.appData}></ShopSinglePageComponent>\n          </ShopProvider>\n        </Route>\n        <Route exact path=\"/shop-page\">\n          <ShopProvider appData={props.appData}>\n            <ShopPageComponent appData={props.appData}></ShopPageComponent>\n          </ShopProvider>\n        </Route>\n        <Route path=\"*\">\n            <NotFound />\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\n\nfunction App() {\n  const appLocalState = {\n    name: \"APP.js component\",\n    HOST: \"http://localhost:3500/\"\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container page-body\">\n        <h1>Render Component</h1>\n      </div>\n      <BaseRouter appData={appLocalState}></BaseRouter>\n      <FooterPageComponent></FooterPageComponent>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}